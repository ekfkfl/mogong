<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mainMapper">


	<resultMap type="StudyDTO" id="studyMap">
		<id column="study_code" property="studyCode" />
		<result column="id" property="id" />
		<result column="CATEGORY_CODE" property="category" />
		<result column="CITY_CODE" property="cityCode" />
		<result column="NAME" property="name" />
		<result column="WRITE_DATE" property="writeDate" />
		<result column="START_DATE" property="startDate" />
		<result column="END_DATE" property="endDate" />
		<result column="START_TIME" property="startTime" />
		<result column="END_TIME" property="endTime" />
		<result column="PEOPLE" property="people" />
		<result column="AREA" property="area" />
		<result column="DESCRIPTION" property="description" />
		<result column="READ" property="read" />
		<result column="STUDY_STATUS" property="studyStatus" />
		<result column="addr" property="addr1"/>
		<result column="addr2" property="addr2"/>
		
	</resultMap>
	
	<resultMap type="commCodeDTO" id="commMap">
		<id column="comm_code" property="commCode"/>
		<result column="code_name" property="codeName"/>
		<result column="code_desc" property="codeDesc"/>
		<result column="parent_code" property="parentCode"/>
	</resultMap>

	<!-- 스터디 등록 -->
	<insert id="enrollStudy" parameterType="StudyDTO">
		insert into study
		values(study_seq.nextval,#{id},#{category},
		#{detailArea},#{name},sysdate, #{startDate},
		#{endDate}, #{day},#{startTime},#{endTime},
		#{people},#{area},#{description},1,
		'0043',#{addr1},#{addr2})
	</insert>
	
	<!-- 스터디 멤버인지 아닌지 -->
	<select id="selectStudyMember" parameterType="MemberDTO" resultType="string">
		select id from member where id=#{memberId,jdbcType=VARCHAR} and study_code=#{studyCode} 
	</select>

	<!-- 스터디 상세보기 -->
	<select id="studyDetailView" parameterType="string" resultMap="studyMap">
		select study.study_code,study.category_code,study.city_code,user_tb.id,study.name,study.start_date,study.end_date,study.day,study.start_time,study.end_time,study.people,comm_code.code_name as area,study.description,study.addr,study.addr2,user_tb.name as userName,user_tb.path as userProfile,user_tb.email as userEmail,user_tb.intro as userIntro 
		from study,user_tb,comm_code
		where study.id=user_tb.id and study.area=comm_code.comm_code and study_code=#{_parameter}
	</select>
	
	<!-- 스터디 조회수 업데이트  -->
	<update id="readNumUpdate" parameterType="string">
		update study set read=read+1 where studyCode =#{value}	
	</update>
	
	<!-- 읽지 않은 메시지 개수 가져오기 -->
	<select id="messageCount" parameterType="string" resultType="string">
		select COUNT(id) from recv_message where id=#{_parameter,jdbcType=VARCHAR} and confirm='0051'
	</select>
	
	<!-- 지역 상세 코드 가져오기 -->
	<select id="selectAreaCode" parameterType="string" resultMap="commMap">
		select comm_code,code_name from comm_code where parent_code=#{_parameter}
	</select>
	
	<select id="selectRecentStudy" resultMap="studyMap">
		<![CDATA[select study_code, name from study where rownum < 9 order by study_code desc]]>
	</select>
	
	
	<!-- 스터디 검색 -->
	<sql id="searchStudySql">study_code, id, category_code, city_code, name, to_char(write_date, 'YYYY-MM-DD') write_date, to_char(start_date, 'YYYY-MM-DD') start_date, to_char(end_date, 'YYYY-MM-DD') end_date, day, start_time, end_time, people, area, description, read, study_status</sql>
	<select id="selectSearchStudy" parameterType="map" resultMap="studyMap">
	select * from (select * from(select rownum as rnum, a.* from (select  <include refid="searchStudySql"></include> from study
		where name like '%'||#{studyDTO.name}||'%'
		and study_status='0043'
		order by write_date desc) a) b ) 
		<!-- where <![CDATA[ rnum>=1 and rnum<=5 ]]> -->
 	where <![CDATA[ rnum>=#{startIndex} and rnum<=#{endIndex}  ]]>  
	</select>
	
	<!-- 스터디 검색 게시물 수 -->
	<select id="selectSearchStudyCnt" parameterType="map" resultType="int">
		select count(*) from study
		where name like '%'||#{studyDTO.name}||'%'
		and study_status='0043'
	</select>
	
	<!-- 스터디 수정하기 -->
	<update id="studyUpdate" parameterType="StudyDTO">
		update study set city_code=#{detailArea},name=#{name},start_date=#{startDate},end_date=#{endDate},
		day=#{day},start_time=#{startTime},end_time=#{endTime},people=#{people},area=#{area},description=#{description},
		addr=#{addr1},addr2=#{addr2} where id=#{id} and study_code=#{studyCode}
	</update>
	
	<!-- 스터디 정원 검사 -->
	<select id="studyJoinCheckMember" parameterType="int" resultType="int">
		select count(member_code) from member where study_code=#{_parameter} and join_status='0004'
	</select>
	
	<select id="studyJoinCheckPeople" parameterType="int" resultType="int">
		select people from study where study_code=#{_parameter}
	</select>
	
	<!-- 스터디 멤버 추가 -->
	<insert id="studyJoin" parameterType="MemberDTO">
		insert into member values(member_seq.nextval,#{studyCode},#{memberId},'0002','0147')
	</insert>

</mapper>